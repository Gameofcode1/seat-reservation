{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "class Product:\n",
    "    product={\n",
    "        'id':[1,2,3,4,5,6,7,8,9,10],\n",
    "        'name':['apple','orange','banana','mango','biscuit','chocklates','egg','chicken','soap','icecream'],\n",
    "        'quality':['best','normal','best','normal','good','best','normal','best','normal','best'],\n",
    "        'price':[100,222,341,334,122,111,233,111,112,111]       \n",
    "    }\n",
    "calc={\n",
    "    'apple':100,\n",
    "    'orange':222,\n",
    "    'banana':341,\n",
    "    'mango':334,\n",
    "    'biscuit':122,\n",
    "    'chocklates':111,\n",
    "    'egg':233,\n",
    "    'chicken':111,\n",
    "    'soap':112,\n",
    "    'icecream':111\n",
    "    \n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_p=Product.product"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>quality</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>apple</td>\n",
       "      <td>best</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>orange</td>\n",
       "      <td>normal</td>\n",
       "      <td>222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>banana</td>\n",
       "      <td>best</td>\n",
       "      <td>341</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>mango</td>\n",
       "      <td>normal</td>\n",
       "      <td>334</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>biscuit</td>\n",
       "      <td>good</td>\n",
       "      <td>122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>chocklates</td>\n",
       "      <td>best</td>\n",
       "      <td>111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>egg</td>\n",
       "      <td>normal</td>\n",
       "      <td>233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>chicken</td>\n",
       "      <td>best</td>\n",
       "      <td>111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "      <td>soap</td>\n",
       "      <td>normal</td>\n",
       "      <td>112</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>10</td>\n",
       "      <td>icecream</td>\n",
       "      <td>best</td>\n",
       "      <td>111</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id        name quality  price\n",
       "0   1       apple    best    100\n",
       "1   2      orange  normal    222\n",
       "2   3      banana    best    341\n",
       "3   4       mango  normal    334\n",
       "4   5     biscuit    good    122\n",
       "5   6  chocklates    best    111\n",
       "6   7         egg  normal    233\n",
       "7   8     chicken    best    111\n",
       "8   9        soap  normal    112\n",
       "9  10    icecream    best    111"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataa=pd.DataFrame(new_p)\n",
    "dataa\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter the number of purcase by customer:5\n",
      "enter the product name: apple\n",
      "enter the number of product purchases:3\n",
      "the single product value  300\n",
      "enter the product name: orange\n",
      "enter the number of product purchases:2\n",
      "the single product value  444\n",
      "enter the product name: banana\n",
      "enter the number of product purchases:5\n",
      "the single product value  1705\n",
      "enter the product name: icecream\n",
      "enter the number of product purchases:2\n",
      "the single product value  222\n",
      "enter the product name: soap\n",
      "enter the number of product purchases:5\n",
      "the single product value  560\n",
      "total sum of purchase 3231\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>num_purchase</th>\n",
       "      <th>price</th>\n",
       "      <th>grand_total</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>apple</td>\n",
       "      <td>3</td>\n",
       "      <td>300</td>\n",
       "      <td>300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>orange</td>\n",
       "      <td>2</td>\n",
       "      <td>444</td>\n",
       "      <td>744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>banana</td>\n",
       "      <td>5</td>\n",
       "      <td>1705</td>\n",
       "      <td>2449</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>icecream</td>\n",
       "      <td>2</td>\n",
       "      <td>222</td>\n",
       "      <td>2671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>soap</td>\n",
       "      <td>5</td>\n",
       "      <td>560</td>\n",
       "      <td>3231</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       name  num_purchase  price  grand_total\n",
       "0     apple             3    300          300\n",
       "1    orange             2    444          744\n",
       "2    banana             5   1705         2449\n",
       "3  icecream             2    222         2671\n",
       "4      soap             5    560         3231"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "class Inventory(Product):\n",
    "    summ=0\n",
    "    name_array=[]\n",
    "    num_pro=[]\n",
    "    exact_val=[]\n",
    "    grand_total=[]\n",
    "    num=int(input('enter the number of purcase by customer:'))\n",
    "    for i in range(num):\n",
    "        pro_name=input(\"enter the product name: \")\n",
    "        name_array.append(pro_name)\n",
    "            \n",
    "        pro_n= int(input('enter the number of product purchases:'))\n",
    "        num_pro.append(pro_n)\n",
    "            \n",
    "            \n",
    "        in_sum=calc[pro_name]*pro_n\n",
    "        exact_val.append(in_sum)\n",
    "            \n",
    "        print(\"the single product value \",in_sum)\n",
    "        summ=summ+in_sum\n",
    "        grand_total.append(summ)    \n",
    "            \n",
    "    print(\"total sum of purchase\",summ)    \n",
    "    global dicc\n",
    "    dicc={'name':name_array,\n",
    "     'num_purchase':num_pro,\n",
    "     'price':exact_val,\n",
    "      'grand_total': grand_total  }\n",
    "        \n",
    "\n",
    "pd.DataFrame(dicc)\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
